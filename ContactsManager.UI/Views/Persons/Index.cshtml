@model IEnumerable<PersonResponse>;

@{
    ViewBag.Title = "Persons";
}
@* <form  asp-controller="persons" asp-action="index" action="~/persons/index" method="get" > *@

<form  asp-controller="persons" asp-action="index" method="get" >
    <div class="flex">
        <div class="flex-1">
            <div class="text-grey">
                <span>Contacts</span>
            <i class="fa-solid fa-caret-right"></i>
            <span class="text-grey">Persons</span>
        </div>
        </div>

        <div class="flex-1 text-right">
            <a asp-controller="persons" asp-action="PersonsPdf" class="button-link button-blue-back ml">for pdf</a>
            <a asp-controller="persons"  asp-action="create" class="button-link button-blue-back ml">Create person</a>
            <a asp-controller="persons"  asp-action="PersonsCsv" class="button-link button-blue-back ml">For CSV</a>
            <a asp-controller="persons"  asp-action="PersonsExc" class="button-link button-blue-back ml">For Excel</a>

        </div>
    </div>

    <div class="table-container">
        <div class="flex">
             <div class="flex-1">
              <h1>Persons</h1>
             </div>
             <div class="flex-3 text-right">

            <label>Search By:</label>
               <select class="search-dropdown" name="searchBy" style="width:200px">
                @foreach (var field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.CurrentSearchBy)
                    {

                        <option value="@field.Key" selected="selected">@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>

                    }
                }
                </select>

                @* EG:searchBy=PersonName& searchString=abc*@

                <input type="search" id="Search" style="width:200px" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.SearchString" />
          

                <button class="search-button">Search</button>
                <a asp-controller="persons" asp-action="index" class="link-hover" class="ml link-hover">Clear All</a>
            </div>
        </div>

 
    <table class="table w-100 mt persons">
        <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.PersonName)},
                {"DisplayName","Person Name"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.Email)},
                {"DisplayName","Email"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.Age)},
                {"DisplayName","Age"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.Gender)},
                {"DisplayName","Gender"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.DateOfBirth)},
                {"DisplayName","DateOfBirth"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.Address)},
                {"DisplayName","Address"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.Country)},
                {"DisplayName","Country"},

                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName",nameof(PersonResponse.ReceiveLetters)},
                {"DisplayName","ReceiveLetters"},

                })
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            

                @foreach (PersonResponse person in Model)
                {

                <tr>
                    <td style="width:10%">@person.PersonName</td>
                    <td style="width:20%">@person.Email</td>
                    <td style="width:10%">@person.Age</td>
                    <td style="width:6%">@person.Gender</td>
                    <td style="width:8%">@person.DateOfBirth.Value.ToString("dd MMM yyyy")</td>
                    <td style="width:10%">@person.Address</td>
                    <td style="width:5%">@person.Country</td>
                    <td style="width:10%">@person.ReceiveLetters</td>
                    <td style="width:20%">
                        <a asp-controller="Persons" class="button-link button-blue-back" asp-action="Edit" asp-route-PersonID="@person.PersonId">EDit</a>
                        <a asp-controller="Persons" class="button-link button-red-back" asp-action="Delete" asp-route-PersonID="@person.PersonId">Delete</a>
                    </td>            
                </tr>
                }
        </tbody>
    </table>
   
</form>